reticulate::repl_python()
va = int(input("Enter integer"))
va = 2 + 2
vb = 5
va = int(input("Enter integer"))
#Python Code
#Python Code
va = int(input("Enter int"))
5
for i in range(0, 3):
print(i*va)
import pandas as pd
import numpy
quit
#R code
library(reticulate)
os <- import("os") # Setting directory
os$getcwd()
repl_python()       #used to make it interactive
quit
import numpy as np. # Load numpy  package
import numpy as np
import numpy
#R code
install.packages("reticulate")
#R code
lubrary(reticulate)
#R code
library(reticulate)
install_miniconda(path = "e:/miniconda", update = T)
conda_list(conda = "e:/miniconda/_conda.exe")
##           name                                        python
q()
library(stats)    #Important that all libraries are loaded
library(dplyr)
library(randomForest)
library(magrittr)
library(caTools)
library(datasets)
library(party)
View(iris)
data("morley")
View(morley)
data("quakes")
View(quakes)
data("BostonHomicide")
View(quakes)
View(quakes)
View(BostonHomicide)
data = read.csv("water_use_data_2013_to_2022.csv")
data = read.csv("archive(1).csv")
data = read.csv("wateruse_data.csv")
setwd("C:/Users/test/Downloads")
data = read.csv("wateruse_data.csv")
setwd("C:/Users/test/Documents")
setwd("C:/Users/test/Documents")
data = read.csv("wateruse_data.csv")
View(data)
cor(data)
corr(data)
data.summary()
summary(data)
Wateruse = data.frame(data)
corr(Wateruse)
WateruseCor = drop.na(Wateruse)
WateruseCor = drop_na(Wateruse)
WateruseCor = na.rm(Wateruse)
WateruseCor = na.omit(Wateruse)
cor(WateruseCor)
WateruseCor %>%
select(-county)
WateruseCor.drop(['county', industry], axis = 1)
WateruseCor.drop(['county', 'industry'], axis = 1)
WateruseCor.drop('county', axis = 1)
WateruseCor %>% select(-one_of('county', 'industry'))
cor(WateruseCor)
WateruseCor
library(stats)    #Important that all libraries are loaded
library(dplyr)
library(randomForest)
library(magrittr)
library(caTools)
library(datasets)
library(party)
setwd("C:/Users/test/Documents")
data = read.csv("wateruse_data.csv")
View(data)
summary(data)
Wateruse = data.frame(data)
WateruseCor = na.omit(Wateruse)
WateruseCor <- subset(df, select = -c(var1, var3))
WateruseCor <- subset(df, select = -c(county, industry))
WateruseCor <- subset(Wateruse, select = -c(county, industry))
cor(WateruseCor)
View(data.frame(cor(WateruseCor))
View(WateruseCor)
WateruseCor <- data.frame(cor(WateruseCor))
View(WateruseCor)
#K-Means Clustering Model Utilizing Inertia Plot (WSS Plot)
library(ggplot2)
library(ggfortify) # Essential Libraries needed
#WSS Plot Function Inbuilt and pre programmed
library(cluster)
library(rattle)
library(NbClust)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
}
Waterusedf = subset(Wateruse, select = -c(county, industry))
wssplot(Waterusedf)
KM = kmeans(Waterusedf, 3)
autoplot(KM, Waterusedf, frame = TRUE)
KM$centers
autoplot(KM, Waterusedf, frame = TRUE)
autoplot(KM, Waterusedf, frame = TRUE)
KMCenters = data.frame(KM$centers)
View(KMCenters)
wssplot(Waterusedf)
set.seed(1234)
KM = kmeans(Waterusedf, 3)
KM
Waterusedf = subset(Wateruse, select = -c(Unnamed..0,county, industry))
wssplot(Waterusedf)
set.seed(1234)
KM = kmeans(Waterusedf, 3)
KM
View(KMCenters)
Viwe(Waterusedf)
View(Waterusedf)
View(Wateruse)
View(Wateruse)
